1. spring和springboot的作用、区别
Spring的作用
（1） 核心功能
（2） 依赖注入
（3） 面向切面编程
（4） 事务管理
（5） 多样的辅助功能
Spring Boot的作用
（1）简化Spring应用开发
（2）独立运行
（3）内嵌服务器
（4）自动配置
（5）微服务友好
Spring和Spring Boot的区别
（1） 配置， boot有自动配置
（2）项目初始化：Spring Boot提供了各种快速启动项目的方式，如Spring Initializr，而Spring则没有这样的快速启动方式。
（3）内嵌服务器：Spring Boot内置了Servlet容器，而传统的Spring应用通常需要部署到一个外部的Servlet容器中
（4）微服务开发：Spring Boot在微服务开发中更受欢迎，因为它简化了配置和部署。
（5）独立性：Spring Boot应用是独立的，可以作为一个可执行的JAR运行，而Spring应用通常不是这样

2. 面向对象的三大特征
封装、继承和多态
（1）封装 封装是将数据（属性）和行为（方法）组合在一个单元内，即类
（2）继承是一种机制，它允许一个类（子类）继承另一个类（父类）的属性和方法
（3）多态是指允许不同类的对象对同一消息做出响应的能力。在编程中，它通常通过重载（overloading）和重写（overriding）实现

3. String和StringBuilder、buffer区别
（1）String 不可变性：String 类的对象是不可变的。每当对字符串进行修改时，实际上是创建了一个新的字符串对象，而原始字符串对象保持不变。
（2）StringBuilder 可变性：StringBuilder 类的对象是可变的。这意味着可以在不创建新对象的情况下更改字符串内容。
    线程安全：StringBuilder 是非线程安全的。如果在多线程环境下使用，需要额外的同步处理。
(3) StringBuffer 与 StringBuilder 类似，StringBuffer 也是可变的StringBuffer 是线程安全的，可以在多线程环境下使用而不需要额外的同步措施

4. 抽象类和接口区别
抽象类是不能被实例化的类，它通常作为其他类的基类使用。
用于表达类之间的共同性，包括状态（属性）和行为（方法）
接口是一种完全抽象的类，它用于描述类具有哪些方法，但不提供方法的具体实现。

5. 排序算法
冒泡排序, 选择排序, 插入排序, 快速排序, 归并排序, 堆排序

6. hashmap和hashtable的区别
HashMap 是非线程安全的。如果在多线程环境中使用，没有外部同步的话，可能会导致数据不一致。
Hashtable 是线程安全的，它的每个方法都是同步的，可以在多线程环境中直接使用。
hashmap 允许一个 null 键和多个 null 值。
hashtable 不允许键或值为 null。

7. 了解锁吗，说说你知道的锁
锁是用于控制多个线程对共享资源访问的同步机制。锁的基本目的是保证在任何时刻，共享资源最多只有一个线程在访问，以避免并发引起的问题，如数据不一致性
互斥锁 互斥锁是最基本的锁类型，用于确保同一时刻只有一个线程能访问共享资源。简单易用，但如果不正确使用可能会导致死锁
读写锁 读写锁允许多个读操作同时进行，但写操作是互斥的提高了在读多写少的场景中的并发性能
自旋锁  自旋锁在等待锁的过程中会在一个循环中不断检查锁是否可用，而不是睡眠. 适用于锁只被占用很短时间的场景
死锁：多个线程各自占有一部分资源并等待其他线程的资源，导致无限等待。
活锁：线程不停地重试，但由于某种条件一直不满足，导致无法继续。
饥饿：某些线程因为优先级低或者其他原因，长时间得不到调度。

8. 栈和堆的区别
栈（Stack）和堆（Heap）是程序运行时存储数据的两个关键内存区域
内存管理：栈是自动管理的，而堆需要手动管理或依赖垃圾回收机制。
数据生命周期：栈上数据的生命周期通常随着函数调用而结束，而堆上的数据直到被显式释放或由垃圾回收器回收才结束。
大小限制：栈的大小比堆小，且在程序启动时就确定了。
性能：栈的数据访问速度比堆快，但堆在存储大量数据或需要动态分配内存时更加灵活。

9. final and finally
性质：
final 是一个修饰符，用于声明变量、方法或类。
finally 是一个控制流程的块，用于确保代码的执行。
目的：
final 用于定义不可变的实体。
finally 用于定义无论如何都要执行的代码块。
应用场景：
final 用于声明。
finally 用于异常处理。

10. http协议请求方式有哪些
(1) GET
用途：请求指定的资源。
特点：数据通过 URL 传输，一般用于获取信息。是幂等的，即多次执行相同的 GET 请求，资源状态不会改变。
(2) POST
用途：提交数据给指定的资源，通常导致状态变化或副作用。
特点：数据包含在请求体中，用于提交表单数据、文件上传等。不是幂等的。
(3) PUT
用途：替换目标资源的所有当前表示。
特点：类似于 POST，但是 PUT 通常用于指定资源的更新操作。是幂等的。
(4) delete 
(5) HEAD

11. 
主键是一个或多个字段的组合，用来唯一标识表中的每一行
外键是一个字段或字段组合，它在另一个表中是主键。它用于建立和维护两个表之间的关系。
关键字是 SQL 语句中具有特定意义的保留字，如 SELECT、INSERT、DELETE 等 用于执行数据库操作和查询
索引是对数据库表中一列或多列的值进行排序的一种结构，可以让查询更加快速
